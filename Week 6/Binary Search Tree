#include<stdio.h>
struct node{
    int data;
    struct node* left;
    struct node* right;
};

struct node*root = NULL,*cur,*temp;
struct node* create(){
    cur = (struct node*)malloc(sizeof(struct node));
    scanf("%d",&cur->data);
    cur->left = NULL;
    cur->right = NULL;
    if(root == NULL){
        root = cur;
    }
    else{
        temp = root;
        while(temp != NULL){
            if(cur->data < temp->data && temp->left == NULL){
                temp->left = cur;
                return root;
            }
            else if(cur->data < temp->data && temp->left != NULL)
                temp = temp->left;
            else if(cur->data > temp->data && temp->right == NULL){
                temp->right = cur;
                return root;
            }
            else if(cur->data > temp->data && temp->right != NULL)
                temp = temp->right;
        }
    }
};

void preorder(struct node* root){
    if(root != NULL){
        printf("%d ",root->data);
        preorder(root->left);
        preorder(root->right);
    }
}

void inorder(struct node* root){
    if(root != NULL){
        inorder(root->left);
        printf("%d ",root->data);
        inorder(root->right);
    }
}

void postorder(struct node* root){
    if(root != NULL){
        postorder(root->left);
        postorder(root->right);
        printf("%d ",root->data);
    }
}

int main(){
    int ch;
    while(1){
        printf("\n1-create\n2-preorder\n3-inorder\n4-postorder\n5-exit\n");
        printf("Enter your choice: ");
        scanf("%d",&ch);
        switch(ch){
            case 1:
                create();
                break;
            case 2:
                preorder(root);
                break;
            case 3:
                inorder(root);
                break;
            case 4:
                postorder(root);
                break;
            case 5:
                exit(0);
        }
    }
}

OUTPUT:

1-create
2-preorder
3-inorder
4-postorder
5-exit
Enter your choice: 1
58

1-create
2-preorder
3-inorder
4-postorder
5-exit
Enter your choice: 1
75

1-create
2-preorder
3-inorder
4-postorder
5-exit
Enter your choice: 1
13

1-create
2-preorder
3-inorder
4-postorder
5-exit
Enter your choice: 1
28

1-create
2-preorder
3-inorder
4-postorder
5-exit
Enter your choice: 1
34

1-create
2-preorder
3-inorder
4-postorder
5-exit
Enter your choice: 1
70

1-create
2-preorder
3-inorder
4-postorder
5-exit
Enter your choice: 1
20

1-create
2-preorder
3-inorder
4-postorder
5-exit
Enter your choice: 1
98

1-create
2-preorder
3-inorder
4-postorder
5-exit
Enter your choice: 1
16

1-create
2-preorder
3-inorder
4-postorder
5-exit
Enter your choice: 1
5

1-create
2-preorder
3-inorder
4-postorder
5-exit
Enter your choice: 1
92

1-create
2-preorder
3-inorder
4-postorder
5-exit
Enter your choice: 1
60

1-create
2-preorder
3-inorder
4-postorder
5-exit
Enter your choice: 1
3

1-create
2-preorder
3-inorder
4-postorder
5-exit
Enter your choice: 2
58 13 5 3 28 20 16 34 75 70 60 98 92
1-create
2-preorder
3-inorder
4-postorder
5-exit
Enter your choice: 3
3 5 13 16 20 28 34 58 60 70 75 92 98
1-create
2-preorder
3-inorder
4-postorder
5-exit
Enter your choice: 4
3 5 16 20 34 28 13 60 70 92 98 75 58
1-create
2-preorder
3-inorder
4-postorder
5-exit
Enter your choice: 5

Process returned 0 (0x0)   execution time : 117.336 s
Press any key to continue.
